name: Build WASM Examples

on:
  push:
  workflow_dispatch:

env:
  PER_PAGE: 1

jobs:
  wasm-examples:
    name: Build WASM Examples
    runs-on: macos-latest
    strategy:
      matrix:
        # if all examples are not built, add a new page here
        page: [0, 1, 2]
        api: [webgl2, webgpu]
    steps:

      - name: Checkout Bevy latest tag
        uses: actions/checkout@master
        with:
          repository: 'bevyengine/bevy'
          ref: 'latest'

      # temp: fetch tools from pr
      - name: Checkout Bevy Tools
        uses: actions/checkout@master
        with:
          repository: 'mockersf/bevy'
          ref: 'example-showcase-improvements'
          path: 'bevy-tools'
      - name: Copy Bevy tools to latest
        run: |
          cp -r bevy-tools/tools/ tools
          rm -rf bevy-tools

      - name: Install WASM tooling
        run: |
          cargo install --force wasm-bindgen-cli
          mkdir ./binaryen
          wget -qO- https://github.com/WebAssembly/binaryen/releases/download/version_114/binaryen-version_114-x86_64-macos.tar.gz | tar xvz --strip-components 1 -C ./binaryen binaryen-version_114

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: wasm32-unknown-unknown,x86_64-apple-darwin

      - name: Build WASM Examples
        run: |
          export PATH=$PATH:`pwd`/binaryen/bin
          cargo run -p example-showcase -- --per-page ${{ env.PER_PAGE }} --page ${{ matrix.page }} build-wasm-examples --content-folder wasm-examples --api ${{ matrix.api }} --website-hacks --optimize-size

      - name: Upload Generated Files
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.api }}-examples-${{ matrix.page }}
          path: wasm-examples

  cloudflare-upload:
      name: Upload to Cloudflare
      runs-on: ubuntu-latest
      needs: wasm-examples
      strategy:
        matrix:
          api: [webgl2, webgpu]  
      steps:
        
        - name: Download artifacts
          id: download-artifact
          uses: actions/github-script@v6
          with:
            result-encoding: string
            script: |
              var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{ github.run_id }},
              });
              console.log("artifacts");
              for (let i = 0; i < artifacts.length; i++) {
                console.log(artifacts[i].name);
              }
              var matchArtifacts = artifacts.data.artifacts.filter((artifact) => {
                return artifact.name.startsWith("${{ matrix.api }}-examples-")
              });
              console.log("matchArtifacts");
              for (let i = 0; i < matchArtifacts.length; i++) {
                console.log(matchArtifacts[i].name);
              }
              for (let i = 0; i < matchArtifacts.length; i++) {
                var matchArtifact = matchArtifacts[i];
                var download = await github.rest.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: matchArtifact.id,
                  archive_format: 'zip',
                });
                var fs = require('fs');
                fs.writeFileSync('${{ github.workspace }}/' + matchArtifact.name, Buffer.from(download.data));
              }
              return "true"
        - run: |
            ls -lrtha
            for file in ${{ matrix.api }}-examples-*
            do
              unzip -o $file
              rm $file
            done
            ls -lrtha

        - name: Publish to Cloudflare Pages
          uses: cloudflare/pages-action@v1
          with:
            apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
            accountId: e4ae7cfc404d73db40d8bb8626d89007
            projectName: bevy-wasm-${{ matrix.api }}
            directory: /
            # # Optional: Switch what branch you are publishing to.
            # # By default this will be the branch which triggered this workflow
            # branch: main
            # # Optional: Change the working directory
            # workingDirectory: my-site
            # # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
            # wranglerVersion: '3'